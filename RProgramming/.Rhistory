search.help("rnorm")
help.search("rnorm")
setwd("~/GitHub/RProgramming")
available.packages()
help.search()
help.search("me")
a <- available.packages()
head(rownames(a), 3)
a <- available.packages("KernSmooth")
available.packages("KernSmooth")
available.packages("Kern")
a <- available.packages()
a
install.package("KernSmooth")
install.packages("KernSmooth")
install.packages("KernSmooth")
packageDescription('KernSmooth')
library(KernSmooth)
search()
search(kernsmooth)
search("kernsmooth")
search()
package.find("devtools")
find.package("devtools")
find.package("devtools")
library(datasets)
data(iris)
?iris
Spacial
iris
iris$Sepal.Length
mean(iris$Sepal.Length)
rowMeans(iris[, 1:4])
apply(iris, 1, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
mtcars
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hp <- tapply(mtcars$hp, mtcars$cyl, mean)
hp[1]
hp[2]
asolute
abs(hp[1], hp[3])
abs((hp[1] - hp[3]))
(hp[1] - hp[3])
hp[1]
hp[3]
abs((hp[1] - hp[3]))
debug(ls)
ls()
exit
quit
URL = "http://github.com/jtleek/modules/blob/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv"
DEST = file.path(getwd(),"avgpm25.csv")
download.file(URL, DEST)
pollution <- read.csv("avgpm25.csv", colclasses=c("numeric", "character", "factor", "numeric", "numeric"))
pollution <- read.csv("avgpm25.csv", colClasses=c("numeric", "character", "factor", "numeric", "numeric"))
URL = "https://raw.githubusercontent.com/jtleek/modules/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv"
DEST = file.path(getwd(),"avgpm25.csv")
download.file(URL, DEST)
pollution <- read.csv("avgpm25.csv", colClasses=c("numeric", "character", "factor", "numeric", "numeric"))
pollution
head(pollution)
#5 number summary
summary(pollution$pm25)
#boxplot
boxplot(pollution$pm25, col="blue")
#histogram
hist((pollution$pm25, col="green"))
#histogram
hist(pollution$pm25, col="green")
#histogram
hist(pollution$pm25, col="green")
rug(pollution$pm25)
#histogram
hist(pollution$pm25, col="green", breaks=100)
rug(pollution$pm25) # shows outliers
#boxplot
boxplot(pollution$pm25, col="blue")
abline(h = 12)
#histogram
hist(pollution$pm25, col="green", breaks=100)
rug(pollution$pm25) # shows outliers
abline(v=12, lwd=2)
#histogram
hist(pollution$pm25, col="green", breaks=100)
rug(pollution$pm25) # shows outliers
abline(v=12, lwd=2)
abline(v = median(pollution$pm25), col="magenta", lwd =4)
#barplot
barplot(table(pollution$region), col="wheat", main="Counties per region")
#muliple boxplots
boxplot(pm25 ~ region, data=pollution, col="red")
hist(subset(pollution, region == "east")$pm25, col="green")
par(mfrow = c(2,1) mar=(4,4,2,1))
hist(subset(pollution, region == "east")$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
par(mfrow = c(2,1), mar=(4,4,2,1))
hist(subset(pollution, region == "east")$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
par(mfrow=c(2,1), mar=(4,4,2,1))
?par
par(mfrow=c(2,1), mar = c(4,4,2,1))
hist(subset(pollution, region == "east")$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
#multiple histograms
par(mfrow=c(2,1), mar = c(4,4,2,1)) #set graph properties
hist(subset(pollution, region == "east")$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
#scatterplot
with(pollution, plot(latitude, pm25, col=region))
abline(h=12, lwd=2, lty=2)
#multi-scatterplot
par(mfrow=c(1,2), mar = c(5,4,2,1)) #set graph properties
with(subset(pollution, region=="east"), plot(latitude, pm25, main=East))
with(subset(pollution, region=="West"), plot(latitude, pm25, main=West))
#multi-scatterplot
par(mfrow=c(1,2), mar = c(5,4,2,1)) #set graph properties
with(subset(pollution, region=="east"), plot(latitude, pm25, main="East"))
with(subset(pollution, region=="West"), plot(latitude, pm25, main="West"))
with(subset(pollution, region=="east"), plot(latitude, pm25, main="East"))
with(subset(pollution, region=="West"), plot(latitude, pm25, main="West"))
with(subset(pollution, region=="west"), plot(latitude, pm25, main="West"))
#multi-scatterplot
par(mfrow=c(1,2), mar = c(5,4,2,1)) #set graph properties
with(subset(pollution, region=="east"), plot(latitude, pm25, main="East"))
with(subset(pollution, region=="west"), plot(latitude, pm25, main="West"))
?with
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
library(lattice)
state <- data.frame(state.x77, region.state.region)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = C(4,1))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = C(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
xyplot(Life.Exp ~ Income , data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
data(mpg)
qplot(displ, hwy, data=mpg)
install.packages("ggplot2")
library(ggplot2)
data(mpg)
qplot(displ, hwy, data=mpg)
with(cars, plot(speed, dist))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- dtGDP[X != ""]
