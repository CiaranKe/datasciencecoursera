search.help("rnorm")
help.search("rnorm")
setwd("~/GitHub/RProgramming")
available.packages()
help.search()
help.search("me")
a <- available.packages()
head(rownames(a), 3)
a <- available.packages("KernSmooth")
available.packages("KernSmooth")
available.packages("Kern")
a <- available.packages()
a
install.package("KernSmooth")
install.packages("KernSmooth")
install.packages("KernSmooth")
packageDescription('KernSmooth')
library(KernSmooth)
search()
search(kernsmooth)
search("kernsmooth")
search()
package.find("devtools")
find.package("devtools")
find.package("devtools")
library(datasets)
data(iris)
?iris
Spacial
iris
iris$Sepal.Length
mean(iris$Sepal.Length)
rowMeans(iris[, 1:4])
apply(iris, 1, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
mtcars
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hp <- tapply(mtcars$hp, mtcars$cyl, mean)
hp[1]
hp[2]
asolute
abs(hp[1], hp[3])
abs((hp[1] - hp[3]))
(hp[1] - hp[3])
hp[1]
hp[3]
abs((hp[1] - hp[3]))
debug(ls)
ls()
exit
quit
getwd()
setwd('..')
dir()
setwd('GettingAndCleaningData/quiz/')
dir()
install.packages("downloader")
?download.file
COMUNITIES_URL ='http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
COMUNITIES_DEST= 'comunities.csv'
download.file(COMUNITIES_URL,COMUNITIES_DEST)
dir()
read.table('comunities.csv')
?read.table
comunities <- read.table('comunities.csv', header = T)
View(comunities)
comunities <- read.table('comunities.csv', header = T, sep=',', fill=T)
View(comunities)
class(comunities)
?strsplit
names(comunities)
strsplit(names(comunities), 'wgtp')
x<- strsplit(names(comunities), 'wgtp')
x
View(x)
x[123]
GDP_URL ='http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
GDP_DEST= 'GDP.csv'
download.file(GDP_URL,GDP_DEST)
gdp <- read.table(GDP_DEST, header = F, skip = 10, Fill=T)
gdp <- read.table(GDP_DEST, header = F, skip = 10, fill=T)
gdp
View(gdp)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 10, fill=T)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 10, fill=T, quote='"' )
View(gdp)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 10, fill=T, quote='"', nrow=190 )
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 10, fill=T, quote='"', nrows=190 )
View(gdp)
names(gdp)
names(gdp) <- c('copuntryCode','Ranking','','Name','Economy')
names(gdp)
names(gdp) <- c('copuntryCode','Ranking','V1','Name','Economy', 'V2','V3','V4',)
names(gdp) <- c('copuntryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5')
names(gdp)
names(gdp) <- c('copuntryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
names(gdp)
View(gdp)
as.numeric(gdp$Economy)
gsub(',','',gdp$Economy)
as.numeric(gsub(',','',gdp$Economy))
as.numeric(gsub(',','',gdp$Economy),)
as.numeric(gsub(',','',gdp$Economy))
View(as.numeric(gsub(',','',gdp$Economy)))
View(gdp$Economy)
gdp$Economy <- as.numeric(gsub(',','',gdp$Economy))
mean(gdp$Economy)
mean(gdp$Economy, na.omit=T)
mean(gdp$Economy, na.rm=T)
View(gdp)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 6, fill=T, quote='"', nrows=185 )
View(gdp)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 5, fill=T, quote='"', nrows=185 )
View(gdp)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 5, fill=T, quote='"', nrows=190 )
names(gdp) <- c('copuntryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
gdp$Economy <- as.numeric(gsub(',','',gdp$Economy))
mean(gdp$Economy, na.rm=T)
grep("^United",countryNames), 3
gdp[3]
gdp[4]
GDP_URL ='http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
GDP_DEST= 'GDP2.csv'
download.file(GDP_URL,GDP_DEST)
EDU_URL ='http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
EDU_DEST= 'EDU.csv'
download.file(EDU_URL,EDU_DEST)
download.file(EDU_URL,EDU_DEST)
edu <- read.table(EDU_DEST, header = T, sep=',', fill=T)
edu <- read.table(EDU_DEST, header = T, sep=',', fill=T, quote='"')
View(edu)
names(edu)
names(gdp)
names(gdp) <- c('copuntryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
?inner_join
??inner_join
library(dplyr)
?inner_join
names(gdp) <- c('countryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
?inner_join(gdp, edu, by='countryCode')
inner_join(gdp, edu, by='countryCode')
gdp$countryCode
edu$countryCode
inner_join(gdp, edu, by='countryCode')
edu$CountryCode
inner_join(gdp, edu, by.x='countryCode', by.y='CountryCode')
names(gdp) <- c('CountryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
inner_join(gdp, edu, by='CountryCode')
gdp_edu <- inner_join(gdp, edu, by='CountryCode')
View(gdp_edu)
names(gdp)
gdp$V1 <- NULL
names(gdp)
gdp$V2 <- NULL
gdp$V3 <- NULL
gdp$V4 <- NULL
gdp$V5 <- NULL
gdp$V6 <- NULL
gdp$V2 <- NULL
gdp$V2 <- gdp$V6 <- NULL
GDP_URL ='http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
GDP_DEST= 'GDP2.csv'
download.file(GDP_URL,GDP_DEST)
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 5, fill=T, quote='"', nrows=190 )
names(gdp) <- c('countryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
gdp$V2 <- gdp$V3 <- gdp$V4 <- gdp$V5 <- gdp$V6 <- NULL
names(gdp)
gdp$V1 <- NULL
gdp_edu <- inner_join(gdp, edu, by='CountryCode')
names(gdp) <- c('CountryCode','Ranking','V1','Name','Economy', 'V2','V3','V4','V5', 'V6')
names(gdp) <- c('CountryCode','Ranking','Name','Economy')
gdp_edu <- inner_join(gdp, edu, by='CountryCode')
View(gdp_edu)
names(gdp_edu)
View(gdp_edu)
grep('Fiscal', gdp_edu$Special.Notes)
gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]
View(gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ])
gdp_edu[grep('Fiscal.June', gdp_edu$Special.Notes), ]
gdp_edu[grep('Fiscal*June', gdp_edu$Special.Notes), ]
gdp_edu[grep('Fiscal.June', gdp_edu$Special.Notes, perl=TRUE), ]
gdp_edu[gdp_edu[grep('Fiscal', gdp_edu$Special.Notes, perl=TRUE), ],]
gdp_edu[where(grep('Fiscal', gdp_edu$Special.Notes, perl=TRUE)), ]
gdp_edu[which(grep('Fiscal', gdp_edu$Special.Notes, perl=TRUE)), ]
gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]
grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ])
grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), 14])
grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), 15])
grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes),]$Special.Notes)
grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes),]$Special.Notes)
gdp_edu[grep('Fiscal', gdp_edu$Special.Notes),]$Special.Notes
length(gdp_edu[grep('Fiscal', gdp_edu$Special.Notes),]$Special.Notes)
length(gdp_edu[grep('Fiscal year end', gdp_edu$Special.Notes),]$Special.Notes)
length(gdp_edu[grep('Fiscal year end:', gdp_edu$Special.Notes),]$Special.Notes)
gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]
gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]$Special.Notes
grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]$Special.Notes)
gdp_edu[grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]$Special.Notes), ]
length(gdp_edu[grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]$Special.Notes), ])
dim(gdp_edu[grep('June', gdp_edu[grep('Fiscal', gdp_edu$Special.Notes), ]$Special.Notes), ])
gdp[grep("^United",countryNames), 3]
gdp[grep("^United",CountryNames), 3]
gdp[grep("^United",gdp$CountryNames), 3]
gdp[grep(grep("^United",countryNames), 4]
gdp[grep("^United",countryNames), 4]
gdp[grep("^United",gdp$countryNames), 4]
gdp[,1]
gdp[,2]
gdp[,3]
gdp <- read.table(GDP_DEST, header = F, sep=',', skip = 5, fill=T, quote='"', nrows=190 )
names(gdp) <- c('CountryCode','Ranking','V1','countryNames','Economy', 'V2','V3','V4','V5', 'V6')
gdp[grep("^United",countryNames), 4]
gdp[grep("^United",countryNames), 3]
gdp[grep("^United",gdp$countryNames), 3]
gdp[grep("^United",gdp$countryNames), 4]
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library('quantmod')
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
View(sampleTimes)
View(amzn)
values <- format(sampleTimes, "%a %Y")
values
length(grep("2012", values))
length(grep("Mon 2012", values))
library(stringr)
# check if a data folder exists; if not then create one
if (!file.exists("data")) {dir.create("data")}
# file URL and destination file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
destfile <- "./data/GDP.csv"
# download the file and note the time
download.file(fileUrl, destfile = destfile)
dateDownloaded <- date()
# from the zip file, read out the containing csv file
data_ <- read.csv(destfile)
countryNames <- data_$X.2
grep("*United",countryNames)
data_[grep("*United",countryNames),2]
data_
data_[grep("*United",countryNames),3]
data_[grep("*United",countryNames),2]
data_[grep("*United",countryNames),3]
data_[grep("*United",countryNames),4]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[[123]]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
library(dplyr)
dt <- data.table(read.csv(f))
??data.table
library(data.table)
dt <- data.table(read.csv(f))
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[[123]]
isUnited <- grepl("^United", dtGDP$Long.Name)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
mean(gdp, na.rm=TRUE)
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
dtGDP
names(dtGDP)
dtGDP[[0]]
dtGDP[0]
dtGDP[0,]
dtGDP[,0]
dtGDP[,1]
dtGDP[,2]
dtGDP
dtGDP[10,1]
dtGDP[10,2]
dtGDP[10,]
dim(dtGDP)
dtGDP[4]
dtGDP[4,]
dtGDP[,4]
dtGDP[4]
